# Import Models
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import KNeighborsRegressor
from sklearn.linear_model import Lasso
from sklearn.linear_model import Ridge
from sklearn.tree import DecisionTreeRegressor
from sklearn.tree import ExtraTreeRegressor
from xgboost import XGBRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import AdaBoostRegressor
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.ensemble import BaggingRegressor

# Valuation
from sklearn.metrics import mean_squared_error as MSE

models=[LinearRegression(),KNeighborsRegressor(),Ridge(),Lasso(),DecisionTreeRegressor(),ExtraTreeRegressor(),XGBRegressor(),RandomForestRegressor(),AdaBoostRegressor(),GradientBoostingRegressor(),BaggingRegressor()]
models_str=['LinearRegression','KNNRegressor','Ridge','Lasso','DecisionTree','ExtraTree','XGBoost','RandomForest','AdaBoost','GradientBoost','Bagging']
rmse_=[]
score_=[]

for name,model in zip(models_str,models):
    model=model   
    model.fit(encoded_train,y_train)
    y_pred=model.predict(encoded_test)  
    rmse=MSE(y_test, y_pred)**(1/2)
    rmse_.append(str(rmse)[:5])
    score=model.score(encoded_test,y_test)
    score_.append(str(score)[:5])
    print(name +' RMSE:'+str(rmse))
    print(name +' Score:'+str(score))

Model_Valuation=pd.DataFrame()
Model_Valuation['Model']=models_str
Model_Valuation['RMSE']=rmse_
Model_Valuation['Score']=score_
Model_Valuation.sort_values(by='Score',ascending=False)
